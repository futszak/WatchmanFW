#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Name: WatchmanFW
#
# Author:  Tomasz Kruk   futszak@gmail.com
# version 0.21

import signal
import sys
import os
import follow
import time
import socket
import routeros_api
import configparser

configini = configparser.ConfigParser()
configini.read('watchmanfw.ini')

def signal_handler(signal, frame):
        print('You pressed Ctrl+C!')
        sys.exit(0)

def logsend(s):
    """Write log."""
    try:
        port = int(configini['syslog']['port'])
    except:
        port = 514
    try:
        nt = (configini['script']['procname'])+" "+str((int(time.time())))+': '
        ip = configini['syslog']['address']
        sock.sendto((nt+str(s)+'\n'), (ip, port))
    except:
        print ("no logs")

def whitelist(line):
    a,b=line.split("from")
    c,d=b.split("port")
    ip=(c.replace(" ", ""))
    # print(ip)
    addip(ip)

def timestamp():
    a = int(float(time.time()))
    return(a)

def isonlist(ip,api,list_queues):
    list_queues = api.get_resource('/ip/firewall/address-list')
    for a in list_queues.get():
        if ((a['address']) == ip):
            return(1)
    return(0)

def addip(ip):
    address = configini['mikrotik']['address']
    username = configini['mikrotik']['username']
    password = configini['mikrotik']['password']
    whitelist = configini['mikrotik']['whitelist']
    timeout = configini['mikrotik']['timeout']
    connection = routeros_api.RouterOsApiPool(address, username=username, password=password)
    api = connection.get_api()
    list_queues = api.get_resource('/ip/firewall/address-list')
    if isonlist(ip,api,list_queues):
        print("Address is already on the list")
    else:
        list_queues.add(address=ip, list=whitelist, timeout=timeout)


signal.signal(signal.SIGINT, signal_handler)
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)  # for UDP logging

pid = str(os.getpid())

if os.path.isfile(configini['script']['pidfile']):
    os.remove(configini['script']['pidfile'])
file(configini['script']['pidfile'], 'w').write(pid)
logsend("Service start at PID "+str(pid))

if __name__ == '__main__':
    logfile = open(configini['syslog']['logfile'],"r")
    loglines = follow.follow(logfile)
    for line in loglines:
        if configini['machine']['name'] in line:
            if configini['machine']['lstring'] in line:
                if configini['machine']['user']:
                    whitelist(line)
